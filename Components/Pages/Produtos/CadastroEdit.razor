@page "/novoProduto"
@page "/novoProduto{Id:guid}"
@attribute [Authorize]


@using Blazored.Toast.Configuration
@inject IToastService toastService
@inject ICategoriaServices CategoriaServices
@inject IProdutoServices ProdutoServices
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@if (Id is null)
{
    <PageTitle>Cadastrar produto</PageTitle>
    <h3>Cadastrar produto</h3>
}
else
{

    <PageTitle>Editar "@produto.Nome"</PageTitle>
    <h3>Editar "@produto.Nome"</h3>
}


@if (categorias.Count == 0)
{
    <ModalDeBloqueio Titulo="Cadastre uma categoria"
        onCancela="@(()=> NavigationManager.NavigateTo("/produtos"))"
        onConfirma="@(()=> NavigationManager.NavigateTo("/novaCategoria"))">
        Por favor cadastre uma categoria primeiro
    </ModalDeBloqueio>
}
else
{

<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="5"
                IconType="IconType.Material"
                InfoIcon="school"
                WarningIcon="warning" />

<EditForm Model="produto" OnValidSubmit="AcaoProduto">
    <DataAnnotationsValidator/>
    <div>
        <label for="codigo">Codigo</label>
        <InputNumber id="codigo" class="form-control" @bind-Value="produto.Codigo"></InputNumber>
    </div>
    <div>
        <label for="nome">Nome</label>
        <InputText id="nome" class="form-control" @bind-Value="produto.Nome"></InputText>
        <ValidationMessage For="@(() => produto.Nome)"/>
    </div>
    <div>
        <label for="quantidade">Quantidade</label>
        <InputNumber id="quantidade" class="form-control" @bind-Value="produto.Quantidade"></InputNumber>
    </div>
    <div>
        <label for="categoria">Categoria</label>
        <InputSelect id="categoria" class="form-control" @bind-Value="produto.ID_categoria">
            <option selected >Selecione uma categoria</option>
            @if (categorias != null)
            {
                @foreach (var categoria in categorias)
                {
                    <option value="@categoria.CategoriaId">@categoria.Nome</option>
                }
            }
        </InputSelect>
            <ValidationMessage For="@(() => produto.ID_categoria)" />
    </div>
    <div>
        <label for="valor">Valor</label>
        <InputNumber id="valor" class="form-control" @bind-Value="produto.Valor"></InputNumber>
    </div>
    <div>
        <label for="valorDeCusto">Valor de custo</label>
        <InputNumber id="valorDeCusto" class="form-control" @bind-Value="produto.ValorDeCusto"></InputNumber>
    </div>
    <div>
        <label for="margeDeLucro">Margem de lucro</label>
        <InputNumber id="margeDeLucro" class="form-control" @bind-Value="produto.MargemLucro"></InputNumber>
    </div>
    <div>
        <MudSwitch @bind-Value="produto.PrecoAutomatico" Label="Calcular preço automaticamente?" Color="Color.Success" />
    </div>
    <div>
        <MudSwitch @bind-Value="produto.IsActive" Label="Ativo" Color="Color.Success" />
    </div>
    <div class="p-2">
        <label></label>
    <button type="submit" class="btn btn-info">Salvar</button>
        <button class="btn btn-secondary" onclick="@(()=> NavigationManager.NavigateTo("/produtos"))">Voltar</button>
    </div>
</EditForm>
}

@code {
    [Parameter]
    public Guid? Id { get; set; }
    List<Categoria> categorias = new List<Categoria>();
    public Produto produto { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        categorias = await CategoriaServices.GetAllCategoriasAsync();
        if (Id != null)
        {
            produto = await ProdutoServices.GetProdutosByIdAsync((Guid)Id);
        }
    }


    async Task Cadastrar()
    {
        if (Id != null)
        {
            await ProdutoServices.UpdateProdutoAsync(produto);
        }
        else
        {
            await ProdutoServices.AddProdutoAsync(produto);
        }
        NavigationManager.NavigateTo("/produtos");
    }

    async Task AcaoProduto()
    {
        Produto confereCodigo = await ProdutoServices.GetProdutosByCodigoAsync(produto.Codigo);
        if (confereCodigo != null)
        {
            if (Id != null)
            {
                if (Id == confereCodigo.Id) Cadastrar();
                else toastService.ShowError("O código do produto ja existe no sistema!");
            }
            else toastService.ShowError("O código do produto ja existe no sistema!"); 
        }
        else
        {
            Cadastrar();
        }
    }
}
