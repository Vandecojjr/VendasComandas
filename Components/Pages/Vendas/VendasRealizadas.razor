@inject IVendaServices Vendaservises

<MudDataGrid T="Venda" Filterable="true" Hideable="true" Items="@vendas">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Vendas de @data.ToString("dd/MM/yyyy")</MudText>
        </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Numero" Title="N° da venda" Sortable="false" Filterable="false" />
        <PropertyColumn Property="x => x.Total" Sortable="false" Filterable="false" Format="C" />
        <PropertyColumn Property="x => x.Descontos" Sortable="false" Filterable="false" Format="C" />
        <PropertyColumn Property="x => x.NomeDoUsuario" Title="Vendedor" Sortable="false" Filterable="false" />
        <PropertyColumn Property="x => x.DataDaVenda" Title="Data" Sortable="false" Filterable="false"  />
        <TemplateColumn Filterable="false" Sortable="false" CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Color="Color.Info" Icon="@Icons.Material.Outlined.RemoveRedEye" />
                <MudIconButton OnClick="() => CancelarVenda(context.Item.Id)" Color="Color.Error" Icon="@Icons.Material.Outlined.Delete"/>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

    @code{
    DateTime data = DateTime.Today;
    private List<Venda> vendas = new List<Venda>();
    protected override async Task OnInitializedAsync() => vendas = await Vendaservises.GetAllVendasAsync();

    async Task CancelarVenda(Guid id)
    {
        await Vendaservises.DeleteVendaAsync((Guid)id);
        vendas = await Vendaservises.GetAllVendasAsync();
        StateHasChanged();
    }
}

